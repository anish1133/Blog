{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\WEB\\\\React\\\\Advanced React\\\\blogs\\\\src\\\\context\\\\AppContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { baseUrl } from \"../baseUrl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\nexport default function AppContextProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [loading, setLoading] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(null);\n\n  // data filling\n\n  async function fetchBlogPosts() {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    setLoading(true);\n    let url = `${baseUrl}?page=${page}`;\n    try {\n      const result = await fetch(url);\n      const data = await result.json();\n      console.log(data);\n      setPage(data.page);\n      setPosts(data.posts);\n      setTotalPages(data.totalPages);\n    } catch (error) {\n      console.log(\"error in fetching data\");\n      setPage(1);\n      setPosts([]);\n      setTotalPages(null);\n    }\n    setLoading(false);\n  }\n  function handlePageChange(page) {\n    setPage(page);\n    fetchBlogPosts(page);\n  }\n  const value = {\n    posts,\n    setPosts,\n    loading,\n    setLoading,\n    page,\n    setPage,\n    totalPages,\n    setTotalPages,\n    fetchBlogPosts,\n    handlePageChange\n  };\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 11\n  }, this);\n}\n_s(AppContextProvider, \"iPGKj/bHFGJObv8I3se48JeLl5g=\");\n_c = AppContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AppContextProvider\");","map":{"version":3,"names":["createContext","useState","baseUrl","jsxDEV","_jsxDEV","AppContext","AppContextProvider","_ref","_s","children","loading","setLoading","posts","setPosts","page","setPage","totalPages","setTotalPages","fetchBlogPosts","arguments","length","undefined","url","result","fetch","data","json","console","log","error","handlePageChange","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/WEB/React/Advanced React/blogs/src/context/AppContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\nimport {baseUrl} from \"../baseUrl\";\r\n\r\nexport const AppContext = createContext();\r\n\r\nexport default function AppContextProvider ({children}){\r\n   const [loading , setLoading] = useState(false);\r\n   const [posts , setPosts] = useState([]);\r\n   const [page , setPage] = useState(1);\r\n   const [totalPages , setTotalPages] = useState(null); \r\n\r\n   // data filling\r\n\r\n    async function fetchBlogPosts(page=1){\r\n        setLoading(true);\r\n        let url = `${baseUrl}?page=${page}`;\r\n        try{\r\n            const result = await fetch(url);\r\n            const data = await result.json();\r\n            console.log(data);\r\n            setPage(data.page);\r\n            setPosts(data.posts);\r\n            setTotalPages(data.totalPages);            \r\n\r\n        }\r\n        catch(error){\r\n            console.log(\"error in fetching data\");\r\n            setPage(1);\r\n            setPosts([]);\r\n            setTotalPages(null);\r\n        }\r\n        setLoading(false);\r\n    }\r\n\r\n    function handlePageChange(page){\r\n        setPage(page);\r\n        fetchBlogPosts(page);\r\n    }\r\n\r\n   const value = {\r\n     posts,\r\n     setPosts,\r\n     loading,\r\n     setLoading,\r\n     page,\r\n     setPage,\r\n     totalPages,\r\n     setTotalPages,\r\n     fetchBlogPosts,\r\n     handlePageChange\r\n   };\r\n\r\n   return <AppContext.Provider value={value}>\r\n        {children}\r\n   </AppContext.Provider>\r\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAAQC,OAAO,QAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,OAAO,MAAMC,UAAU,gBAAGL,aAAa,EAAE;AAEzC,eAAe,SAASM,kBAAkBA,CAAAC,IAAA,EAAa;EAAAC,EAAA;EAAA,IAAX;IAACC;EAAQ,CAAC,GAAAF,IAAA;EACnD,MAAM,CAACG,OAAO,EAAGC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC9C,MAAM,CAACW,KAAK,EAAGC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACa,IAAI,EAAGC,OAAO,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACpC,MAAM,CAACe,UAAU,EAAGC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAEnD;;EAEC,eAAeiB,cAAcA,CAAA,EAAQ;IAAA,IAAPJ,IAAI,GAAAK,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAC,CAAC;IAChCR,UAAU,CAAC,IAAI,CAAC;IAChB,IAAIW,GAAG,GAAI,GAAEpB,OAAQ,SAAQY,IAAK,EAAC;IACnC,IAAG;MACC,MAAMS,MAAM,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MAC/B,MAAMG,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAI,EAAE;MAChCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBV,OAAO,CAACU,IAAI,CAACX,IAAI,CAAC;MAClBD,QAAQ,CAACY,IAAI,CAACb,KAAK,CAAC;MACpBK,aAAa,CAACQ,IAAI,CAACT,UAAU,CAAC;IAElC,CAAC,CACD,OAAMa,KAAK,EAAC;MACRF,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrCb,OAAO,CAAC,CAAC,CAAC;MACVF,QAAQ,CAAC,EAAE,CAAC;MACZI,aAAa,CAAC,IAAI,CAAC;IACvB;IACAN,UAAU,CAAC,KAAK,CAAC;EACrB;EAEA,SAASmB,gBAAgBA,CAAChB,IAAI,EAAC;IAC3BC,OAAO,CAACD,IAAI,CAAC;IACbI,cAAc,CAACJ,IAAI,CAAC;EACxB;EAED,MAAMiB,KAAK,GAAG;IACZnB,KAAK;IACLC,QAAQ;IACRH,OAAO;IACPC,UAAU;IACVG,IAAI;IACJC,OAAO;IACPC,UAAU;IACVC,aAAa;IACbC,cAAc;IACdY;EACF,CAAC;EAED,oBAAO1B,OAAA,CAACC,UAAU,CAAC2B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAtB,QAAA,EACnCA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACQ;AACzB;AAAC5B,EAAA,CAlDuBF,kBAAkB;AAAA+B,EAAA,GAAlB/B,kBAAkB;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}